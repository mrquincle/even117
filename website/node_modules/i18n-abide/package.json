{
  "author": {
    "name": "Austin King",
    "email": "shout@ozten.com",
    "url": "http://ozten.com"
  },
  "name": "i18n-abide",
  "description": "Express/connect module for Node i18n and l10n support",
  "version": "0.0.8beta8",
  "homepage": "https://github.com/mozilla/i18n-abide",
  "repository": {
    "type": "git",
    "url": "git://github.com/mozilla/i18n-abide.git"
  },
  "bugs": {
    "url": "http://github.com/mozilla/i18n-abide/issues"
  },
  "main": "lib/i18n.js",
  "engines": {
    "node": ">= 0.6.2"
  },
  "dependencies": {
    "async": "0.1.22",
    "gobbledygook": "0.0.3",
    "jsxgettext": "0.1.2",
    "optimist": "0.3.4"
  },
  "devDependencies": {
    "vows": "0.5.13"
  },
  "scripts": {
    "test": "NODE_PATH=lib node_modules/.bin/vows tests/*-tests.js --spec"
  },
  "bin": {
    "check-l10n-config": "bin/check-l10n-config.js",
    "check-po": "bin/check-po.sh",
    "compile-json": "bin/compile-json",
    "compile-mo": "bin/compile-mo.sh",
    "every-locale.js": "bin/every-locale.js",
    "extract-pot": "bin/extract-pot",
    "merge-po": "bin/merge-po.sh",
    "po2json.js": "bin/po2json.js"
  },
  "licenses": [
    {
      "type": "MPL 2.0",
      "url": "http://www.mozilla.org/MPL/2.0/"
    }
  ],
  "keywords": [
    "express",
    "connect",
    "l10n",
    "i18n",
    "gettext"
  ],
  "readme": "# i18n-abide\n\nThis module **abides by the user's language preferences** and makes it\navailable throughout the app.\n\nThis module **abides by the Mozilla L10n way of doing things**.\n\n**The module abides**.\n\n# Status\n\nThis module is under development, but frozen parts of it power the [Mozilla Persona](https://github.com/mozilla/browserid) service in 40+ languages.\n\n# Tutorial\n\nMozilla Hacks blog has a three part introduction.\n\n* [Localize Your Node.js Service](https://hacks.mozilla.org/2013/04/localize-your-node-js-service-part-1-of-3-a-node-js-holiday-season-part-9/)\n* [Localization community, tools & process](https://hacks.mozilla.org/2013/04/localization-community-tools-process-part-2-of-3-a-node-js-holiday-season-part-10/)\n* [Localization in Action](https://hacks.mozilla.org/2013/04/localization-in-action-part-3-of-3-a-node-js-holiday-season-part-11/)\n\n# Pre-requisites for Developers\n\n`npm install` has got your back\n\n# Pre-requisites for String Wranglers\n\nYou should install Gnu gettext to get msginit, xgettext, and other tools.\n\nWhat is a string wrangler? A person or an automated build process that will merge and delete strings between releases.\n\n# Usage\n\n    npm install i18n-abide\n\nIn your app where you setup express or connect:\n\n    var i18n = require('i18n-abide');\n\n    app.use(i18n.abide({\n      supported_languages: ['en-US', 'de', 'es', 'db-LB', 'it-CH'],\n      default_lang: 'en-US',\n      debug_lang: 'it-CH',\n      translation_directory: 'i18n'\n    }));\n\nThis block sets up the middleware and views with gettext support. We declare\nsupport for English, German, Spanish, and two debug locales (more on this later).\n\nIn your routes, you can use the gettext function in ``.js`` files.\n\n    exports.homepage = function(req, resp) {\n      resp.render('home', {title: req.gettext(\"Hey, careful, man, there's a beverage here!\")});\n    };\n\nIn your layout files, you can add\n\n    <!DOCTYPE html>\n    <html lang=\"<%= lang %>\" dir=\"<%= lang_dir %>\">\n      <head>\n        <meta charset=\"utf-8\">\n        ...\n\nIn your templates files, you can use the gettext function in ``.ejs`` files:\n\n    <p><%= gettext(\"This will not stand, ya know, this aggression will not stand, man.\") %></p>\n\ni18n-abide also provides a ``format`` function for string interpolation.\n\nThese are both server side translations and client side translations. Server side works out of the box\nand is the most common use case.\n\nIf you also want to do client-side translations,\ni18n-abide provides ``lib/gettext.js`` and you can do the same in ``.js`` and ``.ejs`` files.\n\n## Setup Gettext\n\n    $ mkdir -p locale/templates/LC_MESSAGES\n    $ ./node_modules/.bin/extract-pot --locale locale .\n\nIf you look in ``locale/templates/LC_MESSAGES/messages.pot`` you will see your strings have been extracted.\nEdit this file and make sure ``charset`` is set to ``UTF-8``.\n\nIf there are certain files or directories you want to exclude, use `--exclude` one or more times. Example:\n\n    $ extract-pot --locale locale . --exclude tests --exclude examples\n\nExample messages.pot:\n\n    \"Content-Type: text/plain; charset=UTF-8\\n\"\n    \"Content-Transfer-Encoding: 8bit\\n\"\n\n    #: ./routes.js:81\n    msgid \"Hey, careful, man, there's a beverage here!\"\n    msgstr \"\"\n\n    #: views/404.ejs:5\n    msgid \"This will not stand, ya know, this aggression will not stand, man.\"\n    msgstr \"\"\n\nTo create ``po`` files in bulk, do:\n\n    $ for l in en_US de es db_LB; do\n        mkdir -p locale/${l}/LC_MESSAGES/\n        msginit --input=./locale/templates/LC_MESSAGES/messages.pot \\\n                --output-file=./locale/${l}/LC_MESSAGES/messages.po \\\n                -l ${l}\n      done\n\nIf you look at ``locale/en_US/LC_MESSAGES/messages.po``, it will be very similar to your template messages.pot file.\n\nThis creates ``.po`` files which you can give to localizers to translate your copy.\n\nLet's put the i18n-abide tools in our path:\n\n    $ export PATH=$PATH:node_modules/i18n-abide/bin\n\nAnd run a string merge:\n\n    $ merge_po.sh ./locale\n\nA merge takes strings from our ``.pot`` files and pushes them into our ``.po`` files. If you have ``podebug`` installed, it also automatically translates ``db-LB``.\n\n# Debugging and Testing\n\n``db-LB`` is a special\n**debug** locale. To trigger it, set your Browser or Operating System language to Italian (Switzerland) which is ``it-CH``.  This fake locale ``db-LB`` will be triggered, it is David Bowie speak for the region of Labyrinth. Oh, hell ya a Dude / Bowie Mashup.\nThat just happened.\n\nExample: ``locale/db_LB/LC_MESSAGES/messages.po``\n\n    \"Content-Type: text/plain; charset=UTF-8\\n\"\n    \"Content-Transfer-Encoding: 8bit\\n\"\n\n    #: routes.js:81\n    msgid \"Hey, careful, man, there's a beverage here!\"\n    msgstr \"‮Hǝʎ´ ɔɐɹǝɟnʅ´ ɯɐu´ ʇɥǝɹǝ,s ɐ qǝʌǝɹɐƃǝ ɥǝɹǝ¡\"\n\n    #: views/404.ejs:5\n    msgid \"This will not stand, ya know, this aggression will not stand, man.\"\n    msgstr \"‮⊥ɥıs ʍıʅʅ uoʇ sʇɐup´ ʎɐ ʞuoʍ´ ʇɥıs ɐƃƃɹǝssıou ʍıʅʅ uoʇ sʇɐup´ ɯɐu·\"\n\nAnd we will compile ``.po`` files into ``.mo`` files.\n\n    $ compile_mo.sh locale/\n\nNow, start up your Node server and visit a page you've wrapped strings in Gettext...\n\nSee docs/USAGE.md for full details.\n",
  "readmeFilename": "README.md",
  "_id": "i18n-abide@0.0.8beta8",
  "_from": "i18n-abide"
}
